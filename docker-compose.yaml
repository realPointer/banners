version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:16.2-alpine3.19
    volumes:
      - pg-data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:7.2.4-alpine
    volumes:
      - redis-data:/data
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    restart: unless-stopped

  banners:
    container_name: banners
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
    restart: unless-stopped

  integration:
    container_name: integration
    build:
      context: .
      dockerfile: integration-tests/Dockerfile
    image: integration
    depends_on:
      - banners

volumes:
  pg-data:
  redis-data:
